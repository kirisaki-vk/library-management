openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22001
servers:
  - url: https://library.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateInterval
          description: A date interval for start and end releaseDate
          required: false
          schema:
            $ref: "#/components/schemas/ReleaseDateInterval"
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get:
      summary: Get all authors
      description: Get all authors will be ordered by name descending by default
      operationId: getAuthors
      parameters:
        - in: query
          required: false
          name: authorName
          schema:
            type: string
      responses:
        200:
          description: A list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
    put:
      summary: Create or Update an Author
      operationId: crupdateAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Author"
      responses:
        200:
          description: The list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"

    delete:
      summary: Delete an Author
      operationId: deleteAuthor
      parameters:
        - in: query
          required: true
          name: authorID
          schema:
            type: string

      responses:
        200:
          description: The deleted Author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Author"
        
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: object
          $ref: "#/components/schemas/Author"
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: dat
    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
    
    ReleaseDateInterval:
      type: object
      properties:
        start:
          type: string
          format: date
        end:
          type: string
          format: date
    